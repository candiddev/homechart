name: Integration

concurrency:
  group: integration_${{ github.ref_name }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

permissions:
  contents: write # This is required for actions/checkout and releases
  id-token: write # This is required for requesting the JWT
  pages: write # This is required for pages
  pull-requests: read # This is required for paths-filter

jobs:
  dependencies:
    if: '!contains(github.ref, ''refs/tags/'')'
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup
        uses: ./github/setup

  lint:
    if: '!contains(github.ref, ''refs/tags/'')'
    name: Lint
    needs:
      - dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup
        id: setup
        uses: ./github/setup
      - name: Lint Go
        if: steps.setup.outputs.change_go == 'true' || github.ref_name == 'main'
        run: ./m lint-go
      - name: Lint Shell
        if: steps.setup.outputs.change_shell == 'true' || github.ref_name == 'main'
        run: ./m lint-shell
      - name: Lint Web
        if: steps.setup.outputs.change_web == 'true' || github.ref_name == 'main'
        run: ./m lint-web
      - name: Lint YAML8n
        if: steps.setup.outputs.change_yaml8n == 'true' || github.ref_name == 'main'
        run: ./m lint-yaml8n

  test_go:
    if: '!contains(github.ref, ''refs/tags/'')'
    name: Test - Go
    needs:
      - dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup
        id: setup
        uses: ./github/setup
      - name: Test Go
        if: steps.setup.outputs.change_go == 'true' || github.ref_name == 'main'
        run: ./m test-go

  test_web:
    if: '!contains(github.ref, ''refs/tags/'')'
    name: Test - Web
    needs:
      - dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup
        id: setup
        uses: ./github/setup
      - name: Test Web
        if: steps.setup.outputs.change_web == 'true' || github.ref_name == 'main'
        run: ./m test-web

  release:
    env:
      BUILD_SOURCE: ${{ contains(github.ref, 'refs/tags/') && 'tag' || github.ref_name == 'main' && 'main' || 'pr' }}
    if: github.ref_name == 'main' || contains(github.ref, 'refs/tags/') && always()
    name: Release
    needs:
      - lint
      - test_go
      - test_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup
        id: setup
        uses: ./github/setup
        with:
          vault_address: ${{ github.ref_name == 'main' || contains(github.ref, 'refs/tags/' && secrets.VAULT_ADDR || '' }}
          vault_role: ${{ contains(github.ref, 'refs/tags/') && 'homechart_tag' || 'homechart_main' }}
      - name: Create tag
        if: github.ref_name == 'main'
        run: |
          ./m tag
      - name: Create release
        run: |
          ./m tag-github-release
          ./m release
      - name: Deploy release
        if: github.ref_name == 'main' || contains(github.ref, 'refs/tags/')
        run: ./m deploy
      - name: Test deployment
        run: ./m test-e2e
      - name: Build hugo
        run: ./m build-hugo
      - name: Setup Pages
        if: github.ref_name == 'main'
        uses: actions/configure-pages@v3
      - name: Upload artifact
        if: github.ref_name == 'main'
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'hugo/public'
      - name: Deploy to GitHub Pages
        if: github.ref_name == 'main'
        id: deployment
        uses: actions/deploy-pages@v2
